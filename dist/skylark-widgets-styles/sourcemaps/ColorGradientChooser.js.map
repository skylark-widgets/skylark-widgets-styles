{"version":3,"sources":["ColorGradientChooser.js"],"names":["define","Color","colorer","Widget","styles","ColorGradientChooser","inherit","klassName","_construct","parent","prototype","call","this","onChange","values","buttons","_elm","style","overflow","backgroundColor","Editor","theme","panelColor","borderStyle","boxSizing","borderRadius","zIndex","canvas","document","createElement","position","top","left","width","height","appendChild","updateButtons","self","buttonOnChange","rgb","color","index","setRGB","updateValues","length","removeChild","shift","button","type","display","cursor","outline","onchange","push","i","context","getContext","gradient","createLinearGradient","colorStep","colorPercentage","buttonSpacing","size","x","buttonPosition","addColorStop","getStyle","set","r","g","b","fillStyle","fillRect","setOnChange","setValue","copy","getValue","updateSize","y"],"mappings":"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","file":"../ColorGradientChooser.js","sourcesContent":["define([\r\n\t\"skylark-graphics-colors/Color\",\r\n\t\"skylark-domx-plugins-colors/colorer\",\t\r\n\t\"skylark-widgets-base/Widget\",\r\n\t\"./styles\"\r\n],function(\r\n\tColor,\r\n\tcolorer,\r\n\tWidget,\r\n\tstyles\r\n){\r\n\t\"use strict\";\r\n\r\n\t/**\r\n\t * Color gradient chooser is used to select and preview a gradient of colors store in an array.\r\n\t *\r\n\t * @class ColorGradientChooser\r\n\t * @extends {Widget}\r\n\t * @param {Widget} parent Parent element.\r\n\t */\r\n\tvar ColorGradientChooser = Widget.inherit({\r\n\t\t\"klassName\" : \"ColorGradientChooser\",\r\n\r\n\t\t\"_construct\" : function (parent){\r\n\t\t\tWidget.prototype._construct.call(this, parent, \"div\");\r\n\r\n\t\t\t/**\r\n\t\t\t * On change callback function.\r\n\t\t\t *\r\n\t\t\t * @property onChange\r\n\t\t\t * @type {Function}\r\n\t\t\t */\r\n\t\t\tthis.onChange = null;\r\n\r\n\t\t\t/**\r\n\t\t\t * Color values of the gradient.\r\n\t\t\t *\r\n\t\t\t * @property values\r\n\t\t\t * @type {Array}\r\n\t\t\t */\r\n\t\t\tthis.values = [];\r\n\r\n\t\t\t/**\r\n\t\t\t * Buttons DOM element. Buttons have a onchange, color and index properties attached to them.\r\n\t\t\t *\r\n\t\t\t * @property buttons\r\n\t\t\t * @type {Array}\r\n\t\t\t */\r\n\t\t\tthis.buttons = [];\r\n\r\n\t\t\tthis._elm.style.overflow = \"hidden\";\r\n\t\t\tthis._elm.style.backgroundColor = Editor.theme.panelColor;\r\n\t\t\tthis._elm.style.borderStyle = \"none\";\r\n\t\t\tthis._elm.style.boxSizing = \"border-box\";\r\n\t\t\tthis._elm.style.borderRadius = \"4px\";\r\n\t\t\tthis._elm.style.zIndex = \"2000\";\r\n\r\n\t\t\t/**\r\n\t\t\t * Canvas DOM element used to draw the gradient.\r\n\t\t\t *\r\n\t\t\t * @property canvas\r\n\t\t\t * @type {DOM}\r\n\t\t\t */\r\n\t\t\tthis.canvas = document.createElement(\"canvas\");\r\n\t\t\tthis.canvas.style.position = \"absolute\";\r\n\t\t\tthis.canvas.style.top = \"0px\";\r\n\t\t\tthis.canvas.style.left = \"0px\";\r\n\t\t\tthis.canvas.style.width = \"100%\";\r\n\t\t\tthis.canvas.style.height = \"100%\";\r\n\t\t\tthis._elm.appendChild(this.canvas);\r\n\t\t},\r\n\r\n\r\n\t\t/**\r\n\t\t * Update the buttos to match new values.\r\n\t\t *\r\n\t\t * @method updateButtons\r\n\t\t */\r\n\t\tupdateButtons : function()\t{\r\n\t\t\tvar self = this;\r\n\r\n\t\t\tfunction buttonOnChange()\r\n\t\t\t{\r\n\t\t\t\tvar rgb = this.color.rgb;\r\n\r\n\t\t\t\tself.values[this.index].setRGB(rgb[0] / 255, rgb[1] / 255, rgb[2] / 255);\r\n\t\t\t\tself.updateValues();\r\n\r\n\t\t\t\tif(self.onChange !== null)\r\n\t\t\t\t{\r\n\t\t\t\t\tself.onChange(self.values[this.index], this.index);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\twhile(this.buttons.length > this.values.length)\r\n\t\t\t{\r\n\t\t\t\tthis._elm.removeChild(this.buttons.shift());\r\n\t\t\t}\r\n\r\n\t\t\twhile(this.buttons.length < this.values.length)\r\n\t\t\t{\r\n\t\t\t\tvar button = document.createElement(\"input\");\r\n\t\t\t\tbutton.type = \"text\";\r\n\t\t\t\tbutton.style.display = \"block\";\r\n\t\t\t\tbutton.style.position = \"absolute\";\r\n\t\t\t\tbutton.style.top = \"0px\";\r\n\t\t\t\tbutton.style.width = \"15px\";\r\n\t\t\t\tbutton.style.height = \"100%\";\r\n\t\t\t\tbutton.style.cursor = \"pointer\";\r\n\t\t\t\tbutton.style.outline = \"none\";\r\n\t\t\t\tbutton.style.borderStyle = \"none\";\r\n\t\t\t\tbutton.style.boxSizing = \"border-box\";\r\n\t\t\t\tbutton.style.borderRadius = \"2px\";\r\n\t\t\t\tthis._elm.appendChild(button);\r\n\r\n\t\t\t\tvar color = colorer(button);\r\n\t\t\t\t/*\r\n\t\t\t\tvar color = new jscolor(button);\r\n\t\t\t\tcolor.backgroundColor = Editor.theme.boxColor;\r\n\t\t\t\tcolor.insetColor = Editor.theme.boxColor;\r\n\t\t\t\tcolor.shadow = false;\r\n\t\t\t\tcolor.borderWidth = 0;\r\n\t\t\t\tcolor.borderRadius = 0;\r\n\t\t\t\tcolor.zIndex = 2000;\r\n\t\t\t\t*/\r\n\r\n\t\t\t\tbutton.onchange = buttonOnChange;\r\n\t\t\t\tbutton.color = color;\r\n\t\t\t\tbutton.index = -1;\r\n\r\n\t\t\t\tthis.buttons.push(button);\r\n\t\t\t}\r\n\r\n\t\t\tfor(var i = 0; i < this.buttons.length; i++)\r\n\t\t\t{\r\n\t\t\t\tthis.buttons[i].index = i;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Update the representation of the gradient.\r\n\t\t *\r\n\t\t * @method updateValues\r\n\t\t */\r\n\t\tupdateValues : function(){\r\n\t\t\tvar context = this.canvas.getContext(\"2d\");\r\n\t\t\tvar gradient = context.createLinearGradient(0, 0, this.canvas.width, 0);\r\n\r\n\t\t\tvar colorStep = 1 / (this.values.length - 1);\r\n\t\t\tvar colorPercentage = 0;\r\n\r\n\t\t\tvar buttonSpacing = (this.size.x - 15) / (this.buttons.length - 1);\r\n\t\t\tvar buttonPosition = 0;\r\n\r\n\t\t\tfor(var i = 0; i < this.values.length; i++)\r\n\t\t\t{\r\n\t\t\t\tgradient.addColorStop(colorPercentage, this.values[i].getStyle());\r\n\r\n\t\t\t\t//this.buttons[i].color.fromRGB(this.values[i].r * 255, this.values[i].g * 255, this.values[i].b * 255);\r\n\t\t\t\tthis.buttons[i].color.set({\r\n\t\t\t\t\tr : this.values[i].r * 255, \r\n\t\t\t\t\tg : this.values[i].g * 255, \r\n\t\t\t\t\tb : this.values[i].b * 255\r\n\t\t\t\t});\r\n\t\t\t\tthis.buttons[i].style.left = buttonPosition + \"px\";\r\n\r\n\t\t\t\tcolorPercentage += colorStep;\r\n\t\t\t\tbuttonPosition += buttonSpacing;\r\n\t\t\t}\r\n\r\n\t\t\tcontext.fillStyle = gradient;\r\n\t\t\tcontext.fillRect(0, 0, this.canvas.width, this.canvas.height);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set onChange callback that receives (value, index) as arguments.\r\n\t\t *\r\n\t\t * @method setOnChange\r\n\t\t * @param {Function} onChange OnChange callback receives value and index as arguments.\r\n\t\t */\r\n\t\tsetOnChange : function(onChange)\t{\r\n\t\t\tthis.onChange = onChange;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set an array of color values to be displayed on this gradient.\r\n\t\t *\r\n\t\t * @method setValue\r\n\t\t * @param {Array} values\r\n\t\t */\r\n\t\tsetValue : function(values)\t{\r\n\t\t\tthis.values = [];\r\n\r\n\t\t\tfor(var i = 0; i < values.length; i++)\r\n\t\t\t{\r\n\t\t\t\tvar color = new Color();\r\n\t\t\t\tcolor.copy(values[i]);\r\n\t\t\t\tthis.values.push(color);\r\n\t\t\t}\r\n\r\n\t\t\tthis.updateButtons();\r\n\t\t\tthis.updateValues();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Get the values stored in this element.\r\n\t\t *\r\n\t\t * @method getValue\r\n\t\t * @return {Array} Values of the gradient.\r\n\t\t */\r\n\t\tgetValue : function()\t{\r\n\t\t\treturn this.values;\r\n\t\t},\r\n\r\n\t\tupdateSize : function()\t{\r\n\t\t\tWidget.prototype.updateSize.call(this);\r\n\t\t\t\r\n\t\t\tthis.canvas.width = this.size.x;\r\n\t\t\tthis.canvas.height = this.size.y;\r\n\r\n\t\t\tthis.updateValues();\r\n\t\t}\r\n\r\n\t});\r\n\r\n\r\n\treturn styles.ColorGradientChooser = ColorGradientChooser;\r\n});\r\n"]}