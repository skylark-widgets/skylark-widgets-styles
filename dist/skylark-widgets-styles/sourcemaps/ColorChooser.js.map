{"version":3,"sources":["ColorChooser.js"],"names":["define","langx","$","eventer","popups","Color","ColorPane","Widget","styles","colorPaneTbl","ColorChooser","inherit","klassName","_construct","parent","prototype","call","this","_elm","type","style","outline","borderStyle","boxSizing","textIndent","borderRadius","boxShadow","MozAppearance","webkitAppearance","appearance","self","listenTo","_velm","_value","parse","val","emit","_picker","$pane","append","instantiate","pane","states","showInput","paneIsVisible","hidePane","hide","e","show","css","offset","calcOffset","stop","color","toRgbString","toHexString","onChange","setOnChange","on","setValue","v","getValueString","getValue","getValueHex","toNumber"],"mappings":";;;;;;;AAAAA,QACC,sBACG,qBACA,uBACA,sBACH,+BACA,gCACA,8BACA,WACA,mBACC,SACDC,EACAC,EACAC,EACAC,EAEAC,EACAC,EACAC,EACAC,EACAC,GAEA,aAEA,IAAIC,EAAeH,EAAOI,SACzBC,UAAc,eAEdC,WAAe,SAAUC,GACxBP,EAAOQ,UAAUF,WAAWG,KAAKC,KAAMH,EAAQ,SAE/CG,KAAKC,KAAKC,KAAO,OACjBF,KAAKC,KAAKE,MAAMC,QAAU,OAC1BJ,KAAKC,KAAKE,MAAME,YAAc,OAC9BL,KAAKC,KAAKE,MAAMG,UAAY,aAC5BN,KAAKC,KAAKE,MAAMI,WAAa,MAC7BP,KAAKC,KAAKE,MAAMK,aAAe,MAC/BR,KAAKC,KAAKE,MAAMM,UAAY,OAC5BT,KAAKC,KAAKE,MAAMO,cAAgB,YAChCV,KAAKC,KAAKE,MAAMQ,iBAAmB,QACnCX,KAAKC,KAAKE,MAAMS,WAAa,YAU5B,IAAIC,EAAOb,KAEXA,KAAKc,SAASd,KAAKe,MAAM,SAAS,WACjCF,EAAKG,OAAS5B,EAAM6B,MAAMJ,EAAKE,MAAMG,OACrCL,EAAKM,KAAK,SAASN,EAAKG,UAGzBhB,KAAKc,SAASd,KAAKoB,QAAQ,SAAS,WACnCP,EAAKG,OAAS5B,EAAM6B,MAAMJ,EAAKE,MAAMG,OACrCL,EAAKM,KAAK,SAASN,EAAKG,UAIzBhB,KAAKqB,MAAQpC,EAAEO,GACfP,EAAE,QAAQqC,OAAOtB,KAAKqB,OACtBrB,KAAKoB,QAAU/B,EAAUkC,YAAYvB,KAAKqB,MAAM,IAE7CG,MACOC,QACIC,WAAW,MAKjB,IAAIC,GAAgB,EAepB,SAASC,IACAD,IAGLA,GAAgB,EAEhBd,EAAKQ,MAAMQ,QAEfD,IAEA5B,KAAKc,SAASd,KAAKe,MAAM,mBAAoB,SAAUe,GAC/CH,EACAC,IAzBAD,IAIJA,GAAgB,EAEhBd,EAAKQ,MAAMU,OAEdlB,EAAKQ,MAAMW,IAAI,WAAY,YACxBnB,EAAKQ,MAAMY,OAAO9C,EAAO+C,WAAWrB,EAAKQ,MAAM,GAAIR,EAAKZ,QAqB1Df,EAAQiD,KAAKL,KAGf9B,KAAKc,SAASd,KAAKoB,QAAQ,SAAS,CAACU,EAAEM,KACtCvB,EAAKG,OAASoB,EACXvB,EAAKE,MAAMiB,IAAI,mBAAoBI,EAAMC,eACzCxB,EAAKE,MAAMG,IAAIkB,EAAME,eACrBzB,EAAKM,KAAK,SAASiB,KAGvBpC,KAAKc,SAASd,KAAKoB,QAAQ,mBAAoBU,IAC3CF,MAmBb5B,KAAKuC,SAAW,MASjBC,YAAc,SAASD,GACtBvC,KAAKyC,GAAG,SAASzC,KAAKuC,SAAWA,IAWlCG,SAAW,SAASC,GAEnB3C,KAAKgB,OAAS5B,EAAM6B,MAAM0B,GAC1B3C,KAAKe,MAAMG,IAAIlB,KAAKgB,OAAOsB,gBAU5BM,eAAiB,SAASR,GACzB,OAAOpC,KAAKgB,OAAOsB,eASpBO,SAAW,WACV,OAAO7C,KAAKgB,QASb8B,YAAc,WAEb,OAAO9C,KAAKgB,OAAO+B,cAMrB,OAAOxD,EAAOE,aAAeA","file":"../ColorChooser.js","sourcesContent":["define([\r\n\t\"skylark-langx/langx\",\r\n    \"skylark-domx-query\",\r\n    \"skylark-domx-eventer\",\r\n    \"skylark-domx-popups\",\r\n\t\"skylark-graphics-color/Color\",\r\n\t\"skylark-domx-colors/ColorPane\",\r\n\t\"skylark-widgets-base/Widget\",\r\n\t\"./styles\",\r\n\t\"./colorpane.tpl\"\r\n],function(\r\n\tlangx,\r\n\t$,\r\n\teventer,\r\n\tpopups,\r\n\r\n\tColor,\r\n\tColorPane,\r\n\tWidget,\r\n\tstyles,\r\n\tcolorPaneTbl\r\n){\r\n\t\"use strict\";\r\n\r\n\tvar ColorChooser = Widget.inherit({\r\n\t\t\"klassName\" : \"ColorChooser\",\r\n\r\n\t\t\"_construct\" : function (parent) \t{\r\n\t\t\tWidget.prototype._construct.call(this, parent, \"input\");\r\n\r\n\t\t\tthis._elm.type = \"text\";\r\n\t\t\tthis._elm.style.outline = \"none\";\r\n\t\t\tthis._elm.style.borderStyle = \"none\";\r\n\t\t\tthis._elm.style.boxSizing = \"border-box\";\r\n\t\t\tthis._elm.style.textIndent = \"4px\";\r\n\t\t\tthis._elm.style.borderRadius = \"4px\";\r\n\t\t\tthis._elm.style.boxShadow = \"none\";\r\n\t\t\tthis._elm.style.MozAppearance = \"textfield\";\r\n\t\t\tthis._elm.style.webkitAppearance = \"caret\";\r\n\t\t\tthis._elm.style.appearance = \"textfield\";\r\n\r\n\t\t\t/**\r\n\t\t\t * Color chooser.\r\n\t\t\t *\r\n\t\t\t * @attribute color\r\n\t\t\t * @type {jscolor}\r\n\t\t\t */\r\n\r\n\r\n\t\t\t var self = this;\r\n\r\n\t\t\t this.listenTo(this._velm,\"change\",function(){\r\n\t\t\t \tself._value = Color.parse(self._velm.val());\r\n\t\t\t \tself.emit(\"change\",self._value);\r\n\t\t\t });\r\n\r\n\t\t\t this.listenTo(this._picker,\"change\",function(){\r\n\t\t\t \tself._value = Color.parse(self._velm.val());\r\n\t\t\t \tself.emit(\"change\",self._value);\r\n\t\t\t });\r\n\r\n\r\n\t\t\t this.$pane = $(colorPaneTbl);\r\n\t\t\t $(\"body\").append(this.$pane);\r\n\t\t\t this._picker = ColorPane.instantiate(this.$pane[0],{\r\n                //color : opts.color\r\n\t\t\t    pane : {\r\n\t\t            states : {\r\n\t\t                showInput: false\r\n\t\t            }            \r\n\t\t        }\t\t\t\t\t \t\r\n             });\r\n\r\n            var paneIsVisible = true;\r\n            function showPane() {\r\n                if (paneIsVisible) {\r\n                    return;\r\n                }\r\n               \r\n                paneIsVisible = true;\r\n\r\n                self.$pane.show();\r\n\r\n            \tself.$pane.css(\"position\", \"absolute\");\r\n                self.$pane.offset(popups.calcOffset(self.$pane[0], self._elm));\r\n                \r\n            }\r\n\r\n            function hidePane() {\r\n                if (!paneIsVisible) {\r\n                    return;\r\n                }\r\n                paneIsVisible = false;\r\n\r\n                self.$pane.hide();\r\n            }\r\n            hidePane();\r\n\r\n            this.listenTo(this._velm,\"click touchstart\", function (e) {\r\n                if (paneIsVisible) {\r\n                    hidePane();\r\n                } else {\r\n                    showPane();\r\n                }\r\n\r\n              eventer.stop(e);\r\n            });\r\n\r\n            this.listenTo(this._picker,\"picked\",(e,color) => {\r\n            \tself._value = color;\r\n                self._velm.css(\"background-color\", color.toRgbString());   \r\n                self._velm.val(color.toHexString());     \r\n                self.emit(\"change\",color);       \r\n            });\r\n\r\n            this.listenTo(this._picker,\"canceled choosed\",(e) => {\r\n                hidePane();\r\n            });\r\n\r\n\t\t\t/*\r\n\t\t\tthis.color = new jscolor(this.element);\r\n\t\t\tthis.color.backgroundColor = Editor.theme.boxColor;\r\n\t\t\tthis.color.insetColor = Editor.theme.boxColor;\r\n\t\t\tthis.color.shadow = false;\r\n\t\t\tthis.color.borderWidth = 0;\r\n\t\t\tthis.color.borderRadius = 0;\r\n\t\t\tthis.color.zIndex = 2000;\r\n\t\t\t*/\r\n\r\n\t\t\t/**\r\n\t\t\t * On change function.\r\n\t\t\t *\r\n\t\t\t * @attribute onChange\r\n\t\t\t * @type {Function}\r\n\t\t\t */\r\n\t\t\tthis.onChange = null;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set onchange callback, called after changes.\r\n\t\t *\r\n\t\t * @method setOnChange\r\n\t\t * @param {Function} onChange\r\n\t\t */\r\n\t\tsetOnChange : function(onChange) {\r\n\t\t\tthis.on(\"change\",this.onChange = onChange);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set value stored in the input element.\r\n\t\t *\r\n\t\t * @method setValue\r\n\t\t * @param {Number} r\r\n\t\t * @param {Number} g\r\n\t\t * @param {Number} b\r\n\t\t */\r\n\t\tsetValue : function(v) {\r\n\t\t\t//this.color.fromRGB(r * 255, g * 255, b * 255);\r\n\t\t\tthis._value = Color.parse(v);\r\n\t\t\tthis._velm.val(this._value.toHexString());\r\n\t\t},\r\n\r\n\r\n\t\t/**\r\n\t\t * Get color value HEX as string.\r\n\t\t *\r\n\t\t * @method getValueString\r\n\t\t * @return {String} String hex color.\r\n\t\t */\r\n\t\tgetValueString : function(color) {\r\n\t\t\treturn this._value.toHexString();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Get color value object.\r\n\t\t *\r\n\t\t * @method getValue\r\n\t\t * @return {Object} Color object.\r\n\t\t */\r\n\t\tgetValue : function() {\r\n\t\t\treturn this._value;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Get color value HEX.\r\n\t\t *\r\n\t\t * @method getValueHex\r\n\t\t * @return {Number} Numeric hex color.\r\n\t\t */\r\n\t\tgetValueHex : function() {\r\n\t\t\t//return this.color.get().toHex();\r\n\t\t\treturn this._value.toNumber();\r\n\t\t}\r\n\r\n\t}); \r\n\r\n\r\n\treturn styles.ColorChooser = ColorChooser;\r\n});"]}