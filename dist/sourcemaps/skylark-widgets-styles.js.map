{"version":3,"sources":["skylark-widgets-styles.js"],"names":["define","skylark","attach","join","langx","$","eventer","popups","Color","ColorPane","Widget","styles","colorPaneTbl","ColorChooser","inherit","klassName","_construct","parent","prototype","call","this","_elm","type","style","outline","borderStyle","boxSizing","textIndent","borderRadius","boxShadow","MozAppearance","webkitAppearance","appearance","self","listenTo","_velm","_value","parse","val","emit","$pane","append","_picker","instantiate","pane","states","showInput","paneIsVisible","hidePane","hide","e","show","css","offset","calcOffset","showPane","stop","color","toRgbString","toHexString","onChange","setOnChange","on","setValue","v","getValueString","getValue","getValueHex","toNumber","types","objects","events","Vector2","browser","datax","noder","files","geom","elmx","fx","plugins","HashMap","base","SkinManager","NativeEvents","drag","dragend","dragenter","dragexit","dragleave","dragover","dragstart","drop","abort","change","selectionchange","submit","reset","fullscreenchange","fullscreenerror","focus","blur","focusin","focusout","keydown","keypress","keyup","message","click","contextmenu","dblclick","mousedown","mouseup","mousemove","mouseover","mouseout","mouseenter","mouseleave","progress","textInput","tap","touchstart","touchmove","touchend","load","resize","select","scroll","unload","wheel","Plugin","elm","options","element","isHtmlNode","_parse","isString","tagName","overrided","_create","Object","defineProperty","value","state","visible","size","location","_mode","TOP_LEFT","_init","addonCategoryOptions","addons","widgetCtor","constructor","categoryName","i","length","addonOption","addonName","addonSetting","addonCtor","ctor","addon","setParent","isInDocument","_startup","optionsAttr","data","options1","eval","mixin","template","createElement","position","overflow","Error","widgetClass","addClass","args","_refresh","isNativeEvent","isArray","selector","callback","ctx","one","el_","off","obj","event","nodeType","unlistenTo","updateLocation","mode","undefined","TOP_RIGHT","top","y","bottom","BOTTOM_LEFT","left","x","right","updateSize","width","height","setVisibility","updateVisibility","display","updates","mapping","attributs","properties","setting","_addons","category","settings","clone","render","getEnclosing","getEnclosed","children","ArrayList","getSkin","get","ex","enable","set","disable","name","hasClass","pagePosition","outerWidth","marginSize","outerHeight","removeClass","toggleClass","aria","getEl","ariaTarget","_aria","setAttribute","attr","velm","ret","getAttr","setAttr","removeAttr","center","getStyle","setStyle","getData","setData","getParent","_parent","oldParent","mount","_setupChild","unmount","prop","getProp","setProp","throb","params","throbber","defaults","update","target","toElm","before","after","prepend","remove","preventDragEvents","ondrop","preventDefault","ondragover","setAltText","altText","document","alignItems","zIndex","border","Editor","theme","textColor","backgroundColor","barColor","borderColor","body","appendChild","text","createTextNode","destroyFunction","destroy","contains","removeChild","pointerEvents","onmousemove","clientX","clientY","onmouseout","setOnClick","onclick","removeAllChildren","firstChild","setMode","console","warn","updateInterface","updatePosition","attachTo","_attachTo","detach","BOTTOM_RIGHT","meta","apply","arguments","addStatePropMethod","pluginName","register","widgetName","colorer","ColorGradientChooser","values","buttons","panelColor","canvas","updateButtons","buttonOnChange","rgb","index","setRGB","updateValues","shift","button","cursor","onchange","push","context","getContext","gradient","createLinearGradient","colorStep","colorPercentage","buttonSpacing","buttonPosition","addColorStop","r","g","b","fillStyle","fillRect","copy","main"],"mappings":"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","file":"../skylark-widgets-styles.js","sourcesContent":["define('skylark-widgets-styles/styles',[\r\n\t\"skylark-langx/skylark\"\r\n],function(skylark){\r\n\treturn skylark.attach(\"widgets.styles\",{});\r\n});\ndefine('skylark-widgets-styles/colorpane.tpl',[],function(){\r\n    return (function () {\r\n        return [\r\n            \"<div class='sp-container'>\",\r\n                \"<div class='sp-palette-container'>\",\r\n                    \"<div class='sp-palette sp-thumb sp-cf'></div>\",\r\n                    \"<div class='sp-palette-button-container sp-cf'>\",\r\n                        \"<button type='button' class='sp-palette-toggle'></button>\",\r\n                    \"</div>\",\r\n                \"</div>\",\r\n                \"<div class='sp-picker-container'>\",\r\n                    \"<div class='sp-top sp-cf'>\",\r\n                        \"<div class='sp-fill'></div>\",\r\n                        \"<div class='sp-top-inner'>\",\r\n                            \"<div class='sp-color'>\",\r\n                                \"<div class='sp-sat'>\",\r\n                                    \"<div class='sp-val'>\",\r\n                                        \"<div class='sp-dragger'></div>\",\r\n                                    \"</div>\",\r\n                                \"</div>\",\r\n                            \"</div>\",\r\n                            \"<div class='sp-clear sp-clear-display'>\",\r\n                            \"</div>\",\r\n                            \"<div class='sp-hue'>\",\r\n                                \"<div class='sp-slider'></div>\",\r\n                            \"</div>\",\r\n                        \"</div>\",\r\n                        \"<div class='sp-alpha'><div class='sp-alpha-inner'><div class='sp-alpha-handle'></div></div></div>\",\r\n                    \"</div>\",\r\n                    \"<div class='sp-input-container sp-cf'>\",\r\n                        \"<input class='sp-input' type='text' spellcheck='false'  />\",\r\n                    \"</div>\",\r\n                    \"<div class='sp-initial sp-thumb sp-cf'></div>\",\r\n                    \"<div class='sp-button-container sp-cf'>\",\r\n                        \"<a class='sp-cancel' href='#'></a>\",\r\n                        \"<button type='button' class='sp-choose'></button>\",\r\n                    \"</div>\",\r\n                \"</div>\",\r\n            \"</div>\"\r\n        ].join(\"\");\r\n    })();\t\r\n });\ndefine('skylark-widgets-styles/color-chooser',[\r\n\t\"skylark-langx/langx\",\r\n    \"skylark-domx-query\",\r\n    \"skylark-domx-eventer\",\r\n    \"skylark-domx-plugins-popups\",\r\n\t\"skylark-graphics-colors/Color\",\r\n\t\"skylark-domx-plugins-colors/ColorPane\",\r\n\t\"skylark-widgets-base/widget\",\r\n\t\"./styles\",\r\n\t\"./colorpane.tpl\"\r\n],function(\r\n\tlangx,\r\n\t$,\r\n\teventer,\r\n\tpopups,\r\n\r\n\tColor,\r\n\tColorPane,\r\n\tWidget,\r\n\tstyles,\r\n\tcolorPaneTbl\r\n){\r\n\t\"use strict\";\r\n\r\n\tvar ColorChooser = Widget.inherit({\r\n\t\t\"klassName\" : \"ColorChooser\",\r\n\r\n\t\t\"_construct\" : function (parent) \t{\r\n\t\t\tWidget.prototype._construct.call(this, parent, \"input\");\r\n\r\n\t\t\tthis._elm.type = \"text\";\r\n\t\t\tthis._elm.style.outline = \"none\";\r\n\t\t\tthis._elm.style.borderStyle = \"none\";\r\n\t\t\tthis._elm.style.boxSizing = \"border-box\";\r\n\t\t\tthis._elm.style.textIndent = \"4px\";\r\n\t\t\tthis._elm.style.borderRadius = \"4px\";\r\n\t\t\tthis._elm.style.boxShadow = \"none\";\r\n\t\t\tthis._elm.style.MozAppearance = \"textfield\";\r\n\t\t\tthis._elm.style.webkitAppearance = \"caret\";\r\n\t\t\tthis._elm.style.appearance = \"textfield\";\r\n\r\n\t\t\t/**\r\n\t\t\t * Color chooser.\r\n\t\t\t *\r\n\t\t\t * @attribute color\r\n\t\t\t * @type {jscolor}\r\n\t\t\t */\r\n\r\n\r\n\t\t\t var self = this;\r\n\r\n\t\t\t this.listenTo(this._velm,\"change\",function(){\r\n\t\t\t \tself._value = Color.parse(self._velm.val());\r\n\t\t\t \tself.emit(\"change\",self._value);\r\n\t\t\t });\r\n\r\n\r\n\r\n\t\t\t this.$pane = $(colorPaneTbl);\r\n\t\t\t $(\"body\").append(this.$pane);\r\n\t\t\t this._picker = ColorPane.instantiate(this.$pane[0],{\r\n                //color : opts.color\r\n\t\t\t    pane : {\r\n\t\t            states : {\r\n\t\t                showInput: false\r\n\t\t            }            \r\n\t\t        }\t\t\t\t\t \t\r\n             });\r\n\r\n\t\t\t this.listenTo(this._picker,\"change\",function(){\r\n\t\t\t \tself._value = Color.parse(self._velm.val());\r\n\t\t\t \tself.emit(\"change\",self._value);\r\n\t\t\t });\r\n\r\n\r\n            var paneIsVisible = true;\r\n            function showPane() {\r\n                if (paneIsVisible) {\r\n                    return;\r\n                }\r\n               \r\n                paneIsVisible = true;\r\n\r\n                self.$pane.show();\r\n\r\n            \tself.$pane.css(\"position\", \"absolute\");\r\n                self.$pane.offset(popups.calcOffset(self.$pane[0], self._elm));\r\n                \r\n            }\r\n\r\n            function hidePane() {\r\n                if (!paneIsVisible) {\r\n                    return;\r\n                }\r\n                paneIsVisible = false;\r\n\r\n                self.$pane.hide();\r\n            }\r\n            hidePane();\r\n\r\n            this.listenTo(this._velm,\"click touchstart\", function (e) {\r\n                if (paneIsVisible) {\r\n                    hidePane();\r\n                } else {\r\n                    showPane();\r\n                }\r\n\r\n              eventer.stop(e);\r\n            });\r\n\r\n            this.listenTo(this._picker,\"picked\",(e,color) => {\r\n            \tself._value = color;\r\n                self._velm.css(\"background-color\", color.toRgbString());   \r\n                self._velm.val(color.toHexString());     \r\n                self.emit(\"change\",color);       \r\n            });\r\n\r\n            this.listenTo(this._picker,\"canceled choosed\",(e) => {\r\n                hidePane();\r\n            });\r\n\r\n\t\t\t/*\r\n\t\t\tthis.color = new jscolor(this.element);\r\n\t\t\tthis.color.backgroundColor = Editor.theme.boxColor;\r\n\t\t\tthis.color.insetColor = Editor.theme.boxColor;\r\n\t\t\tthis.color.shadow = false;\r\n\t\t\tthis.color.borderWidth = 0;\r\n\t\t\tthis.color.borderRadius = 0;\r\n\t\t\tthis.color.zIndex = 2000;\r\n\t\t\t*/\r\n\r\n\t\t\t/**\r\n\t\t\t * On change function.\r\n\t\t\t *\r\n\t\t\t * @attribute onChange\r\n\t\t\t * @type {Function}\r\n\t\t\t */\r\n\t\t\tthis.onChange = null;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set onchange callback, called after changes.\r\n\t\t *\r\n\t\t * @method setOnChange\r\n\t\t * @param {Function} onChange\r\n\t\t */\r\n\t\tsetOnChange : function(onChange) {\r\n\t\t\tthis.on(\"change\",this.onChange = onChange);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set value stored in the input element.\r\n\t\t *\r\n\t\t * @method setValue\r\n\t\t * @param {Number} r\r\n\t\t * @param {Number} g\r\n\t\t * @param {Number} b\r\n\t\t */\r\n\t\tsetValue : function(v) {\r\n\t\t\t//this.color.fromRGB(r * 255, g * 255, b * 255);\r\n\t\t\tthis._value = Color.parse(v);\r\n\t\t\tthis._velm.val(this._value.toHexString());\r\n\t\t},\r\n\r\n\r\n\t\t/**\r\n\t\t * Get color value HEX as string.\r\n\t\t *\r\n\t\t * @method getValueString\r\n\t\t * @return {String} String hex color.\r\n\t\t */\r\n\t\tgetValueString : function(color) {\r\n\t\t\treturn this._value.toHexString();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Get color value object.\r\n\t\t *\r\n\t\t * @method getValue\r\n\t\t * @return {Object} Color object.\r\n\t\t */\r\n\t\tgetValue : function() {\r\n\t\t\treturn this._value;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Get color value HEX.\r\n\t\t *\r\n\t\t * @method getValueHex\r\n\t\t * @return {Number} Numeric hex color.\r\n\t\t */\r\n\t\tgetValueHex : function() {\r\n\t\t\t//return this.color.get().toHex();\r\n\t\t\treturn this._value.toNumber();\r\n\t\t}\r\n\r\n\t}); \r\n\r\n\r\n\treturn styles.ColorChooser = ColorChooser;\r\n});\ndefine('skylark-widgets-base/Widget',[\r\n  \"skylark-langx-ns\",\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\",\r\n  \"skylark-langx-events\",\r\n  \"skylark-langx-numerics/vector2\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-data\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-files\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-velm\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-domx-fx\",\r\n  \"skylark-domx-plugins-base\",\r\n  \"skylark-data-collection/hash-map\",\r\n  \"./base\",\r\n  \"./skins/skin-manager\"\r\n],function(skylark,types,objects,events,Vector2,browser,datax,eventer,noder,files,geom,elmx,$,fx, plugins,HashMap,base,SkinManager){\r\n\r\n     const NativeEvents = {\r\n            \"drag\": 2, // DragEvent\r\n            \"dragend\": 2, // DragEvent\r\n            \"dragenter\": 2, // DragEvent\r\n            \"dragexit\": 2, // DragEvent\r\n            \"dragleave\": 2, // DragEvent\r\n            \"dragover\": 2, // DragEvent\r\n            \"dragstart\": 2, // DragEvent\r\n            \"drop\": 2, // DragEvent\r\n\r\n            \"abort\": 3, // Event\r\n            \"change\": 3, // Event\r\n            ///\"error\": 3, // Event\r\n            \"selectionchange\": 3, // Event\r\n            \"submit\": 3, // Event\r\n            \"reset\": 3, // Event\r\n            'fullscreenchange':3,\r\n            'fullscreenerror':3,\r\n\r\n/*\r\n            'disablepictureinpicturechanged':3,\r\n            'ended':3,\r\n            'enterpictureinpicture':3,\r\n            'durationchange':3,\r\n            'leavepictureinpicture':3,\r\n            'loadstart' : 3,\r\n            'loadedmetadata':3,\r\n            'pause' : 3,\r\n            'play':3,\r\n            'posterchange':3,\r\n            'ratechange':3,\r\n            'seeking' : 3,\r\n            'sourceset':3,\r\n            'suspend':3,\r\n            'textdata':3,\r\n            'texttrackchange':3,\r\n            'timeupdate':3,\r\n            'volumechange':3,\r\n            'waiting' : 3,\r\n*/\r\n\r\n\r\n            \"focus\": 4, // FocusEvent\r\n            \"blur\": 4, // FocusEvent\r\n            \"focusin\": 4, // FocusEvent\r\n            \"focusout\": 4, // FocusEvent\r\n\r\n            \"keydown\": 5, // KeyboardEvent\r\n            \"keypress\": 5, // KeyboardEvent\r\n            \"keyup\": 5, // KeyboardEvent\r\n\r\n            \"message\": 6, // MessageEvent\r\n\r\n            \"click\": 7, // MouseEvent\r\n            \"contextmenu\": 7, // MouseEvent\r\n            \"dblclick\": 7, // MouseEvent\r\n            \"mousedown\": 7, // MouseEvent\r\n            \"mouseup\": 7, // MouseEvent\r\n            \"mousemove\": 7, // MouseEvent\r\n            \"mouseover\": 7, // MouseEvent\r\n            \"mouseout\": 7, // MouseEvent\r\n            \"mouseenter\": 7, // MouseEvent\r\n            \"mouseleave\": 7, // MouseEvent\r\n\r\n\r\n            \"progress\" : 11, //ProgressEvent\r\n\r\n            \"textInput\": 12, // TextEvent\r\n\r\n            \"tap\": 13,\r\n            \"touchstart\": 13, // TouchEvent\r\n            \"touchmove\": 13, // TouchEvent\r\n            \"touchend\": 13, // TouchEvent\r\n\r\n            \"load\": 14, // UIEvent\r\n            \"resize\": 14, // UIEvent\r\n            \"select\": 14, // UIEvent\r\n            \"scroll\": 14, // UIEvent\r\n            \"unload\": 14, // UIEvent,\r\n\r\n            \"wheel\": 15, // WheelEvent\r\n\r\n    };\r\n \r\n  const Plugin = plugins.Plugin;\r\n\r\n  var Widget = Plugin.inherit({\r\n    klassName: \"Widget\",\r\n\r\n    _construct : function(parent,elm,options) {\r\n        if (parent && !(parent instanceof Widget || parent.element)) {\r\n           options = elm;\r\n           elm = parent;\r\n           parent = null;\r\n        }\r\n        if (types.isHtmlNode(elm)) {\r\n          options = this._parse(elm,options);\r\n        } else {\r\n          options = elm;\r\n          elm = null;\r\n        }\r\n        if (types.isString(options)) {\r\n          options = {\r\n            tagName : options\r\n          };\r\n        }\r\n        this.overrided(elm,options);\r\n\r\n        if (!elm) {\r\n          this._velm = this._create();\r\n          this._elm = this._velm.elm();\r\n        } else {\r\n          this._velm = this.elmx(this._elm);\r\n        }\r\n        \r\n        Object.defineProperty(this,\"state\",{\r\n          value :this.options.state || new HashMap()\r\n        });\r\n\r\n        /** \r\n         * True if the element is visible.\r\n         *\r\n         * @attribute visible\r\n         * @type {Boolean}\r\n         */\r\n        this.visible = true;\r\n        \r\n\r\n        //this.element.style.position = \"absolute\";\r\n        //this.element.style.overflow = \"hidden\";\r\n\r\n        /**\r\n         * Size of this component in px.\r\n         *\r\n         * @attribute size\r\n         * @type {Vector2}\r\n         */\r\n        this.size = new Vector2(0, 0);\r\n        \r\n        /**\r\n         * Location of this component relatively to its parent in px.\r\n         *\r\n         * @attribute location\r\n         * @type {Vector2}\r\n         */\r\n        this.location = new Vector2(0, 0);\r\n\r\n        /**\r\n         * Locationing mode, indicates how to anchor the component.\r\n         *\r\n         * @attribute mode\r\n         * @type {Number}\r\n         */\r\n        this._mode = Widget.TOP_LEFT;\r\n     \r\n        //this.state = this.options.state || new Map();\r\n        this._init();\r\n\r\n        var addonCategoryOptions = this.options.addons;\r\n        if (addonCategoryOptions) {\r\n          var widgetCtor = this.constructor,\r\n              addons = widgetCtor.addons;\r\n          for (var categoryName in addonCategoryOptions) {\r\n              for (var i =0;i < addonCategoryOptions[categoryName].length; i++ ) {\r\n                var addonOption = addonCategoryOptions[categoryName][i];\r\n                if (types.isString(addonOption)) {\r\n                  var addonName = addonOption,\r\n                      addonSetting = addons[categoryName][addonName],\r\n                      addonCtor = addonSetting.ctor ? addonSetting.ctor : addonSetting;\r\n\r\n                  this.addon(addonCtor,addonSetting.options);\r\n\r\n                }\r\n\r\n              }\r\n          }\r\n        }\r\n\r\n        //if (this._elm.parentElement) {\r\n        //  // The widget is already in document\r\n        //  this._startup();\r\n        //}\r\n\r\n        if (parent) {\r\n          this.setParent(parent);\r\n        } else if (this._velm.isInDocument()) {\r\n          this._startup();\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * Parses widget options from attached element.\r\n     * This is a callback method called by constructor when attached element is specified.\r\n     * @method _parse\r\n     * @return {Object} options.\r\n     */\r\n    _parse : function(elm,options) {\r\n      var optionsAttr = datax.data(elm,\"options\");\r\n      if (optionsAttr) {\r\n         //var options1 = JSON.parse(\"{\" + optionsAttr + \"}\");\r\n         var options1 = eval(\"({\" + optionsAttr + \"})\");\r\n         options = objects.mixin(options1,options); \r\n      }\r\n      return options || {};\r\n    },\r\n\r\n    /**\r\n     * Create html element for this widget.\r\n     * This is a callback method called by constructor when attached element is not specified.\r\n     * @method _create\r\n     */\r\n    _create : function() {\r\n        var template = this.options.template;\r\n        if (template) {\r\n          return this.elmx(template);\r\n        } else {\r\n          var tagName = this.options.tagName;\r\n          if (tagName) {\r\n            return this.elmx(noder.createElement(tagName,{\r\n              style : {\r\n                position : \"absolute\",\r\n                overflow : \"hidden\"\r\n              }\r\n            }))\r\n          } else {\r\n            throw new Error(\"The template or tagName is not existed in options!\");\r\n          }\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Init widget.\r\n     * This is a callback method called by constructor.\r\n     * @method _init\r\n     */\r\n    _init : function() {\r\n      var self = this;\r\n      if (this.widgetClass) {\r\n        this._velm.addClass(this.widgetClass);\r\n      }\r\n      this.state.on(\"changed\",function(e,args) {\r\n        self._refresh(args.data);\r\n      });\r\n    },\r\n\r\n\r\n    /**\r\n     * Startup widget.\r\n     * This is a callback method called when widget element is added into dom.\r\n     * @method _post\r\n     */\r\n    _startup : function() {\r\n\r\n    },\r\n\r\n\r\n    isNativeEvent : function(events) {\r\n        if (types.isString(events)) {\r\n            return !!NativeEvents[events];\r\n        } else if (types.isArray(events)) {\r\n            for (var i=0; i<events.length; i++) {\r\n                if (NativeEvents[events[i]]) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        }            \r\n\r\n    },   \r\n\r\n    on : function(events, selector, data, callback, ctx, /*used internally*/ one) {\r\n        if (this.el_ && this.isNativeEvent(events)) {\r\n            eventer.on(this.el_,events,selector,data,callback,ctx,one);\r\n        } else {\r\n            Plugin.prototype.on.call(this,events, selector, data, callback, ctx,  one);\r\n        }\r\n    },   \r\n\r\n    off : function(events, callback) {\r\n        if (this.el_ && this.isNativeEvent(events)) {\r\n            eventer.off(this.el_,events,callback);\r\n        } else {\r\n            Plugin.prototype.off.call(this,events,callback);\r\n        }\r\n    },\r\n\r\n    listenTo : function(obj, event, callback, /*used internally*/ one) {\r\n        if (types.isString(obj) || types.isArray(obj)) {\r\n            one = callback;\r\n            callback = event;\r\n            event = obj;\r\n            if (this.el_ && this.isNativeEvent(event)) {\r\n                eventer.on(this.el_,event,callback,this,one);\r\n            } else {\r\n                this.on(event,callback,this,one);\r\n            }\r\n        } else {\r\n            if (obj.nodeType) {\r\n                eventer.on(obj,event,callback,this,one)\r\n            } else {\r\n                Plugin.prototype.listenTo.call(this,obj,event,callback,one)\r\n            }                \r\n        }\r\n    },\r\n\r\n    unlistenTo : function(obj, event, callback) {\r\n        if (types.isString(obj) || types.isArray(obj)) {\r\n            callback = event;\r\n            event = obj;\r\n            if (this.el_ && this.isNativeEvent(event)) {\r\n                eventer.off(this.el_,event,callback);\r\n            } else {\r\n                this.off(event,callback);                   \r\n            }\r\n        } else {\r\n            if (obj.nodeType) {\r\n                eventer.off(obj,event,callback)\r\n            } else {\r\n                Plugin.prototype.unlistenTo.call(this,obj,event,callback)\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Update the location of this widget.\r\n     * \r\n     * @method updateLocation\r\n     */\r\n    updateLocation : function(mode) {\r\n      if(mode !== undefined) {\r\n        this._mode = mode;\r\n      }\r\n\r\n      if(this._mode === Widget.TOP_LEFT || this._mode === Widget.TOP_RIGHT) {\r\n        this._elm.style.top = this.location.y + \"px\";\r\n      } else {\r\n        this._elm.style.bottom = this.location.y + \"px\";\r\n      }\r\n\r\n      if(this._mode === Widget.TOP_LEFT || this._mode === Widget.BOTTOM_LEFT) {\r\n        this._elm.style.left = this.location.x + \"px\";\r\n      } else {\r\n        this._elm.style.right = this.location.x + \"px\";\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Update the size of this widget.\r\n     * \r\n     * @method updateSize\r\n     */\r\n    updateSize : function(){\r\n      this._elm.style.width = this.size.x + \"px\";\r\n      this._elm.style.height = this.size.y + \"px\";\r\n    },\r\n\r\n\r\n    /**\r\n     * Update visibility of this element.\r\n     *\r\n     * @method setVisibility\r\n     */\r\n    setVisibility : function(visible)   {\r\n      this.visible = visible;\r\n      this.updateVisibility();\r\n    },\r\n\r\n\r\n    /**\r\n     * Update the visibility of this widget.\r\n     *\r\n     * @method updateVisibility\r\n     */\r\n    updateVisibility : function() {\r\n      this._elm.style.display = this.visible ? \"block\" : \"none\";\r\n    },\r\n\r\n\r\n    /**\r\n     * Refresh widget.\r\n     * This is a callback method called when widget state is changed.\r\n     * @method _refresh\r\n     */\r\n    _refresh : function(updates) {\r\n      /*\r\n      var _ = this._,\r\n          model = _.model,\r\n          dom = _.dom,\r\n          props = {\r\n\r\n          };\r\n      updates = updates || {};\r\n      for (var attrName in updates){\r\n          var v = updates[attrName].value;\r\n          if (v && v.toCss) {\r\n              v.toCss(props);\r\n              updates[attrName].processed = true;\r\n          }\r\n\r\n      };\r\n\r\n      this.css(props);\r\n\r\n      if (updates[\"disabled\"]) {\r\n          var v = updates[\"disabled\"].value;\r\n          dom.aria('disabled', v);\r\n          self.classes.toggle('disabled', v);\r\n      }\r\n      */\r\n    },                \r\n\r\n    mapping : {\r\n      \"events\" : {\r\n  //       'mousedown .title':  'edit',\r\n  //       'click .button':     'save',\r\n  //       'click .open':       function(e) { ... }            \r\n      },\r\n\r\n      \"attributs\" : {\r\n\r\n      },\r\n\r\n      \"properties\" : {\r\n\r\n      },\r\n\r\n      \"styles\" : {\r\n\r\n      }\r\n    },\r\n\r\n    addon : function(ctor,setting) {\r\n      var categoryName = ctor.categoryName,\r\n          addonName = ctor.addonName;\r\n\r\n      this._addons = this.addons || {};\r\n      var category = this._addons[categoryName] = this._addons[categoryName] || {};\r\n      category[addonName] = new ctor(this,setting);\r\n      return this;\r\n    },\r\n\r\n    addons : function(categoryName,settings) {\r\n      this._addons = this.addons || {};\r\n      var category = this._addons[categoryName] = this._addons[categoryName] || {};\r\n\r\n      if (settings == undefined) {\r\n        return objects.clone(category || null);\r\n      } else {\r\n        objects.mixin(category,settings);\r\n      }\r\n    },\r\n\r\n\r\n    /**\r\n     * Returns a html element representing the widget.\r\n     *\r\n     * @method render\r\n     * @return {HtmlElement} HTML element representing the widget.\r\n     */\r\n    render: function() {\r\n      return this._elm;\r\n    },\r\n\r\n\r\n\r\n    /**\r\n     * Returns a parent widget  enclosing this widgets, or null if not exist.\r\n     *\r\n     * @method getEnclosing\r\n     * @return {Widget} The enclosing parent widget, or null if not exist.\r\n     */\r\n    getEnclosing : function(selector) {\r\n      return null;\r\n    },\r\n\r\n    /**\r\n     * Returns a widget collection with all enclosed child widgets.\r\n     *\r\n     * @method getEnclosed\r\n     * @return {List} Collection with all enclosed child widgets..\r\n     */\r\n    getEnclosed : function() {\r\n      var self = this;\r\n          children = new ArrayList();\r\n      return children;\r\n    },\r\n\r\n\r\n    getSkin : function() {\r\n      return SkinManager.get();\r\n    },\r\n\r\n    /**\r\n     * Sets the visible state to true.\r\n     *\r\n     * @method show\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n\r\n    show : function() {\r\n      this._velm.show();\r\n    },\r\n\r\n    /**\r\n     * Sets the visible state to false.\r\n     *\r\n     * @method hide\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    hide : function() {\r\n      this._velm.hide();\r\n    },\r\n\r\n    /**\r\n     * Focuses the current widget.\r\n     *\r\n     * @method focus\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    focus :function() {\r\n      try {\r\n        this._velm.focus();\r\n      } catch (ex) {\r\n        // Ignore IE error\r\n      }\r\n\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Blurs the current widget.\r\n     *\r\n     * @method blur\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    blur : function() {\r\n      this._velm.blur();\r\n\r\n      return this;\r\n    },\r\n\r\n    enable: function () {\r\n      this.state.set('disabled',false);\r\n      return this;\r\n    },\r\n\r\n    disable: function () {\r\n      this.state.set('disabled',true);\r\n      return this;\r\n    },\r\n\r\n\r\n    /** \r\n     * Add a CSS class to the base DOM element of this widget element.\r\n     * \r\n     * @method addClass\r\n     * @param {String} name Name of the class to be added.\r\n     */\r\n    addClass : function(name){\r\n      this._velm.addClass(name);\r\n      return this;\r\n    },\r\n\r\n    /** \r\n     * Determine whether this widget element is assigned the given class.\r\n     * \r\n     * @method hasClass\r\n     * @param {String} name Name of the class t.\r\n     */\r\n    hasClass : function(name){\r\n      return this._velm.hasClass(name);\r\n    },\r\n\r\n    offset : function() {\r\n        return this._velm.pagePosition();\r\n    },\r\n\r\n    outerWidth : function() {\r\n        return this._velm.marginSize().width;\r\n    },\r\n\r\n    outerHeight : function() {\r\n        return this._velm.marginSize().height;\r\n    },\r\n\r\n    /** \r\n     * Remove a CSS class from the base DOM element of this idget element.\r\n     * \r\n     * @method removeClass\r\n     * @param {String} name Name of the class to be removed.\r\n     */\r\n    removeClass: function(name) {\r\n      this._velm.removeClass(name);\r\n      return this;\r\n    },\r\n\r\n    /** \r\n     * Remove a CSS class from the base DOM element of this idget element.\r\n     * \r\n     * @method removeClass\r\n     * @param {String} name Name of the class to be removed.\r\n     */\r\n    toggleClass: function(name) {\r\n      this._velm.toggleClass(name);\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Sets the specified aria property.\r\n     *\r\n     * @method aria\r\n     * @param {String} name Name of the aria property to set.\r\n     * @param {String} value Value of the aria property.\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    aria : function(name, value) {\r\n      const self = this, elm = self.getEl(self.ariaTarget);\r\n\r\n      if (typeof value === 'undefined') {\r\n        return self._aria[name];\r\n      }\r\n\r\n      self._aria[name] = value;\r\n\r\n      if (self.state.get('rendered')) {\r\n        elm.setAttribute(name === 'role' ? name : 'aria-' + name, value);\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    attr: function (name,value) {\r\n        var velm = this._velm,\r\n            ret = velm.attr(name,value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n    getAttr : function(name) {\r\n      return this._velm.attr(name);\r\n    },\r\n\r\n    setAttr : function(name,value) {\r\n      this._velm.attr(name,value);\r\n      return this;\r\n    },\r\n\r\n    removeAttr : function(name) {\r\n      this._velm.removeAttr(name);\r\n      return this;\r\n    },\r\n\r\n\r\n    /**\r\n     * Calculate the location of the container to make it centered.\r\n     *\r\n     * Calculated relatively to its parent size.\r\n     * \r\n     * @method center\r\n     */\r\n    center : function() {\r\n      this.location.set((this.parent.size.x - this.size.x) / 2, (this.parent.size.y - this.size.y) / 2);\r\n    },\r\n\r\n    css: function (name, value) {\r\n        var velm = this._velm,\r\n            ret = velm.css(name, value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n    getStyle : function(name) {\r\n      return this._velm.css(name);\r\n    },\r\n\r\n    setStyle : function(name,value) {\r\n      this._velm.css(name,value);\r\n      return this;\r\n    },\r\n\r\n    data: function (name, value) {\r\n        var velm = this._velm,\r\n            ret = velm.data(name,value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n\r\n    getData : function(name) {\r\n      return this._velm.data(name);\r\n    },\r\n\r\n    setData : function(name,value) {\r\n      this._velm.data(name,value);\r\n      return this;\r\n    },\r\n\r\n\r\n    parent : {\r\n      get : function() {\r\n        return this.getParent();\r\n      },\r\n      set : function(v) {\r\n        this.setParent(v);\r\n      }\r\n    },\r\n\r\n    getParent : function() {\r\n      return this._parent;\r\n    },\r\n\r\n    setParent : function(parent) {\r\n      var oldParent = this._parent;\r\n      this._parent = parent;\r\n      if (parent) {\r\n        this.mount(parent._elm || parent.element);\r\n        if (parent._setupChild) {\r\n          parent._setupChild(this);\r\n        }\r\n      } else if (oldParent) {\r\n        this.unmount();\r\n      }\r\n      return this;\r\n    },\r\n\r\n\r\n    prop: function (name,value) {\r\n        var velm = this._velm,\r\n            ret = velm.prop(name,value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n    getProp : function(name) {\r\n      return this._velm.prop(name);\r\n    },\r\n\r\n    setProp : function(name,value) {\r\n      this._velm.prop(name,value);\r\n      return this;\r\n    },\r\n\r\n    throb: function(params) {\r\n      if (this.options.throbber) {\r\n        params = objects.defaults(params,this.options.throbber);\r\n      }\r\n      return noder.throb(this._elm,params);\r\n    },\r\n\r\n    /*\r\n    emit : function(type,params) {\r\n      var e = events.createEvent(type,{\r\n        data : params\r\n      });\r\n      return events.Emitter.prototype.emit.call(this,e,params);\r\n    },\r\n    */\r\n\r\n    /**\r\n     * Update component appearance.\r\n     * \r\n     * Should be called after changing size or location.\r\n     *\r\n     * Uses the updateVisibility and if the element is visible calls the updateSize and updateLocation (in this order) methods to update the interface.\r\n     * \r\n     * @method update\r\n     */\r\n    update : function() {\r\n      this.updateVisibility();\r\n\r\n      if(this.visible) {\r\n        this.updateSize();\r\n        this.updateLocation();\r\n      }\r\n    },\r\n\r\n\r\n    /**\r\n     *  mount the current widget element to dom document.\r\n     *\r\n     * @method mount\r\n     * @return {Widget} This Widget.\r\n     */\r\n    mount : function(target,position){\r\n        var toElm = target.element || target,\r\n            elm = this._elm;\r\n        if (!position || position==\"child\") {\r\n            noder.append(toElm,elm);\r\n        } else  if (position == \"before\") {\r\n            noder.before(toElm,elm);\r\n        } else if (position == \"after\") {\r\n            noder.after(toElm,elm);\r\n        } else if (position == \"prepend\") {\r\n            noder.prepend(toElm,elm);         \r\n        }\r\n        this._startup();\r\n    },\r\n\r\n    /**\r\n     *  unmount the current widget element from dom document.\r\n     *\r\n     * @method html\r\n     * @return {HtmlElement} HTML element representing the widget.\r\n     */\r\n    unmount : function() {\r\n      this._velm.remove();\r\n    },\r\n\r\n    preventDragEvents : function() {\r\n      this.element.ondrop = Widget.preventDefault;\r\n      this.element.ondragover = Widget.preventDefault;\r\n    },\r\n\r\n\r\n    element : {\r\n      get : function() {\r\n        return this._elm;\r\n      },\r\n\r\n      set : function(v) {\r\n        this._elm = v;\r\n      }\r\n    },\r\n\r\n    position : {\r\n      get : function() {\r\n        return this.location;\r\n      },\r\n\r\n      set : function(v) {\r\n        this.location = v;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Set alt text, that is displayed when the mouse is over the element. Returns the element created that is attached to the document body.\r\n     *\r\n     * @method setAltText\r\n     * @param {String} altText Alt text.\r\n     */\r\n    setAltText : function(altText)   {\r\n      var element = document.createElement(\"div\");\r\n      element.style.position = \"absolute\";\r\n      element.style.display = \"none\";\r\n      element.style.alignItems = \"center\";\r\n      element.style.zIndex = \"10000\";\r\n      element.style.border = \"3px solid\";\r\n      element.style.borderRadius = \"5px\";\r\n      element.style.color = Editor.theme.textColor;\r\n      element.style.backgroundColor = Editor.theme.barColor;\r\n      element.style.borderColor = Editor.theme.barColor;\r\n      element.style.height = \"fit-content\";\r\n      document.body.appendChild(element);\r\n\r\n      //Text\r\n      var text = document.createTextNode(altText);\r\n      element.appendChild(text);\r\n\r\n      //Destroy\r\n      var destroyFunction = this.destroy;\r\n      this.destroy = function()\r\n      { \r\n        destroyFunction.call(this);\r\n\r\n        if(document.body.contains(element))\r\n        {\r\n          document.body.removeChild(element);\r\n        }\r\n      };\r\n      \r\n      this._elm.style.pointerEvents = \"auto\"; \r\n\r\n      //Mouse mouse move event\r\n      this._elm.onmousemove = function(event) {\r\n        element.style.display = \"flex\";\r\n        element.style.left = (event.clientX + 8) + \"px\";\r\n        element.style.top = (event.clientY - 20) + \"px\";\r\n      };\r\n\r\n      //Mouse out event\r\n      this._elm.onmouseout = function()  {\r\n        element.style.display = \"none\";\r\n      };\r\n\r\n      return element;\r\n    },\r\n\r\n    /**\r\n     * Set method to be called on component click.\r\n     * \r\n     * @method setOnClick\r\n     * @param {Function} callback Function called when the component is clicked.\r\n     */\r\n    setOnClick : function(callback)  {\r\n      this._elm.onclick = callback;\r\n    },\r\n\r\n    /**\r\n     * Remove all DOM children from the element.\r\n     * \r\n     * @method removeAllChildren\r\n     */\r\n    removeAllChildren : function()   {\r\n      while(this._elm.firstChild) {\r\n        this._elm.removeChild(this._elm.firstChild);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Set positioning mode.\r\n     * \r\n     * @method setMode\r\n     * @param {Number} setMode\r\n     */\r\n    setMode : function(mode) {\r\n      this._mode = mode;\r\n      this._elm.style.bottom = null;\r\n      this._elm.style.right = null;\r\n      this._elm.style.left = null;\r\n    },\r\n\r\n\r\n    /**\r\n     * Called to destroy a component.\r\n     *\r\n     * Destroy the element and removes it from its DOM parent.\r\n     * \r\n     * @method destroy\r\n     */\r\n    destroy : function()\r\n    {\r\n      if(this._parent)\r\n      {\r\n        if(this._parent.element)\r\n        {\r\n          if(this._parent.element.contains(this.element))\r\n          {\r\n            this._parent.element.removeChild(this.element);\r\n            this._parent = null;\r\n          }\r\n        }\r\n        else\r\n        {\r\n          console.warn(\"nunuStudio: Parent is not a Element.\", this);\r\n          if(this._parent.contains(this.element))\r\n          {\r\n            this._parent.removeChild(this.element);\r\n            this._parent = null;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n  });\r\n\r\n  Widget.prototype.updateInterface = Widget.prototype.update;\r\n  Widget.prototype.updatePosition = Widget.prototype.updateLocation;\r\n  Widget.prototype.attachTo = Widget.prototype.setParent;\r\n  Widget.prototype._attachTo = Widget.prototype.mount;\r\n  Widget.prototype.detach = Widget.prototype.unmount;\r\n\r\n  /**\r\n   * Top-left locationing.\r\n   *\r\n   * @static\r\n   * @attribute TOP_LEFT\r\n   * @type {Number}\r\n   */\r\n  Widget.TOP_LEFT = 0;\r\n\r\n  /**\r\n   * Top-right locationing.\r\n   *\r\n   * @static\r\n   * @attribute TOP_RIGHT\r\n   * @type {Number}\r\n   */\r\n  Widget.TOP_RIGHT = 1;\r\n\r\n  /**\r\n   * Bottom-left locationing.\r\n   *\r\n   * @static\r\n   * @attribute BOTTOM_LEFT\r\n   * @type {Number}\r\n   */\r\n  Widget.BOTTOM_LEFT = 2;\r\n\r\n  /**\r\n   * Bottom-right locationing.\r\n   *\r\n   * @static\r\n   * @attribute BOTTOM_RIGHT\r\n   * @type {Number}\r\n   */\r\n  Widget.BOTTOM_RIGHT = 3;\r\n\r\n  Widget.inherit = function(meta) {\r\n    var ctor = plugins.Plugin.inherit.apply(this,arguments);\r\n\r\n    function addStatePropMethod(name) {\r\n        ctor.prototype[name] = function(value) {\r\n          if (value !== undefined) {\r\n            this.state.set(name,value);\r\n            return this;\r\n          } else {\r\n            return this.state.get(name);\r\n          }\r\n        };\r\n    }\r\n    if (meta.state) {\r\n      for (var name in meta.state) {\r\n          addStatePropMethod(name);\r\n      }\r\n    }\r\n\r\n    if (meta.pluginName) {\r\n      plugins.register(ctor,meta.pluginName);\r\n    }\r\n    return ctor;\r\n  };\r\n\r\n  Widget.register = function(ctor,widgetName) {\r\n    var meta = ctor.prototype,\r\n        pluginName = widgetName || meta.pluginName;\r\n\r\n    function addStatePropMethod(name) {\r\n        ctor.prototype[name] = function(value) {\r\n          if (value !== undefined) {\r\n            this.state.set(name,value);\r\n            return this;\r\n          } else {\r\n            return this.state.get(name);\r\n          }\r\n        };\r\n    }\r\n    if (meta.state) {\r\n      for (var name in meta.state) {\r\n          addStatePropMethod(name);\r\n      }\r\n    }\r\n\r\n    if (pluginName) {\r\n      plugins.register(ctor,pluginName);\r\n    }\r\n    return ctor;\r\n  };\r\n\r\n  Widget.preventDefault = function(event)\r\n  {\r\n    event.preventDefault();\r\n  };\r\n\r\n  return base.Widget = Widget;\r\n});\r\n\ndefine('skylark-widgets-styles/color-gradient-chooser',[\r\n\t\"skylark-graphics-colors/Color\",\r\n\t\"skylark-domx-plugins-colors/colorer\",\t\r\n\t\"skylark-widgets-base/Widget\",\r\n\t\"./styles\"\r\n],function(\r\n\tColor,\r\n\tcolorer,\r\n\tWidget,\r\n\tstyles\r\n){\r\n\t\"use strict\";\r\n\r\n\t/**\r\n\t * Color gradient chooser is used to select and preview a gradient of colors store in an array.\r\n\t *\r\n\t * @class ColorGradientChooser\r\n\t * @extends {Widget}\r\n\t * @param {Widget} parent Parent element.\r\n\t */\r\n\tvar ColorGradientChooser = Widget.inherit({\r\n\t\t\"klassName\" : \"ColorGradientChooser\",\r\n\r\n\t\t\"_construct\" : function (parent){\r\n\t\t\tWidget.prototype._construct.call(this, parent, \"div\");\r\n\r\n\t\t\t/**\r\n\t\t\t * On change callback function.\r\n\t\t\t *\r\n\t\t\t * @property onChange\r\n\t\t\t * @type {Function}\r\n\t\t\t */\r\n\t\t\tthis.onChange = null;\r\n\r\n\t\t\t/**\r\n\t\t\t * Color values of the gradient.\r\n\t\t\t *\r\n\t\t\t * @property values\r\n\t\t\t * @type {Array}\r\n\t\t\t */\r\n\t\t\tthis.values = [];\r\n\r\n\t\t\t/**\r\n\t\t\t * Buttons DOM element. Buttons have a onchange, color and index properties attached to them.\r\n\t\t\t *\r\n\t\t\t * @property buttons\r\n\t\t\t * @type {Array}\r\n\t\t\t */\r\n\t\t\tthis.buttons = [];\r\n\r\n\t\t\tthis._elm.style.overflow = \"hidden\";\r\n\t\t\tthis._elm.style.backgroundColor = Editor.theme.panelColor;\r\n\t\t\tthis._elm.style.borderStyle = \"none\";\r\n\t\t\tthis._elm.style.boxSizing = \"border-box\";\r\n\t\t\tthis._elm.style.borderRadius = \"4px\";\r\n\t\t\tthis._elm.style.zIndex = \"2000\";\r\n\r\n\t\t\t/**\r\n\t\t\t * Canvas DOM element used to draw the gradient.\r\n\t\t\t *\r\n\t\t\t * @property canvas\r\n\t\t\t * @type {DOM}\r\n\t\t\t */\r\n\t\t\tthis.canvas = document.createElement(\"canvas\");\r\n\t\t\tthis.canvas.style.position = \"absolute\";\r\n\t\t\tthis.canvas.style.top = \"0px\";\r\n\t\t\tthis.canvas.style.left = \"0px\";\r\n\t\t\tthis.canvas.style.width = \"100%\";\r\n\t\t\tthis.canvas.style.height = \"100%\";\r\n\t\t\tthis._elm.appendChild(this.canvas);\r\n\t\t},\r\n\r\n\r\n\t\t/**\r\n\t\t * Update the buttos to match new values.\r\n\t\t *\r\n\t\t * @method updateButtons\r\n\t\t */\r\n\t\tupdateButtons : function()\t{\r\n\t\t\tvar self = this;\r\n\r\n\t\t\tfunction buttonOnChange()\r\n\t\t\t{\r\n\t\t\t\tvar rgb = this.color.rgb;\r\n\r\n\t\t\t\tself.values[this.index].setRGB(rgb[0] / 255, rgb[1] / 255, rgb[2] / 255);\r\n\t\t\t\tself.updateValues();\r\n\r\n\t\t\t\tif(self.onChange !== null)\r\n\t\t\t\t{\r\n\t\t\t\t\tself.onChange(self.values[this.index], this.index);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\twhile(this.buttons.length > this.values.length)\r\n\t\t\t{\r\n\t\t\t\tthis._elm.removeChild(this.buttons.shift());\r\n\t\t\t}\r\n\r\n\t\t\twhile(this.buttons.length < this.values.length)\r\n\t\t\t{\r\n\t\t\t\tvar button = document.createElement(\"input\");\r\n\t\t\t\tbutton.type = \"text\";\r\n\t\t\t\tbutton.style.display = \"block\";\r\n\t\t\t\tbutton.style.position = \"absolute\";\r\n\t\t\t\tbutton.style.top = \"0px\";\r\n\t\t\t\tbutton.style.width = \"15px\";\r\n\t\t\t\tbutton.style.height = \"100%\";\r\n\t\t\t\tbutton.style.cursor = \"pointer\";\r\n\t\t\t\tbutton.style.outline = \"none\";\r\n\t\t\t\tbutton.style.borderStyle = \"none\";\r\n\t\t\t\tbutton.style.boxSizing = \"border-box\";\r\n\t\t\t\tbutton.style.borderRadius = \"2px\";\r\n\t\t\t\tthis._elm.appendChild(button);\r\n\r\n\t\t\t\tvar color = colorer(button);\r\n\t\t\t\t/*\r\n\t\t\t\tvar color = new jscolor(button);\r\n\t\t\t\tcolor.backgroundColor = Editor.theme.boxColor;\r\n\t\t\t\tcolor.insetColor = Editor.theme.boxColor;\r\n\t\t\t\tcolor.shadow = false;\r\n\t\t\t\tcolor.borderWidth = 0;\r\n\t\t\t\tcolor.borderRadius = 0;\r\n\t\t\t\tcolor.zIndex = 2000;\r\n\t\t\t\t*/\r\n\r\n\t\t\t\tbutton.onchange = buttonOnChange;\r\n\t\t\t\tbutton.color = color;\r\n\t\t\t\tbutton.index = -1;\r\n\r\n\t\t\t\tthis.buttons.push(button);\r\n\t\t\t}\r\n\r\n\t\t\tfor(var i = 0; i < this.buttons.length; i++)\r\n\t\t\t{\r\n\t\t\t\tthis.buttons[i].index = i;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Update the representation of the gradient.\r\n\t\t *\r\n\t\t * @method updateValues\r\n\t\t */\r\n\t\tupdateValues : function(){\r\n\t\t\tvar context = this.canvas.getContext(\"2d\");\r\n\t\t\tvar gradient = context.createLinearGradient(0, 0, this.canvas.width, 0);\r\n\r\n\t\t\tvar colorStep = 1 / (this.values.length - 1);\r\n\t\t\tvar colorPercentage = 0;\r\n\r\n\t\t\tvar buttonSpacing = (this.size.x - 15) / (this.buttons.length - 1);\r\n\t\t\tvar buttonPosition = 0;\r\n\r\n\t\t\tfor(var i = 0; i < this.values.length; i++)\r\n\t\t\t{\r\n\t\t\t\tgradient.addColorStop(colorPercentage, this.values[i].getStyle());\r\n\r\n\t\t\t\t//this.buttons[i].color.fromRGB(this.values[i].r * 255, this.values[i].g * 255, this.values[i].b * 255);\r\n\t\t\t\tthis.buttons[i].color.set({\r\n\t\t\t\t\tr : this.values[i].r * 255, \r\n\t\t\t\t\tg : this.values[i].g * 255, \r\n\t\t\t\t\tb : this.values[i].b * 255\r\n\t\t\t\t});\r\n\t\t\t\tthis.buttons[i].style.left = buttonPosition + \"px\";\r\n\r\n\t\t\t\tcolorPercentage += colorStep;\r\n\t\t\t\tbuttonPosition += buttonSpacing;\r\n\t\t\t}\r\n\r\n\t\t\tcontext.fillStyle = gradient;\r\n\t\t\tcontext.fillRect(0, 0, this.canvas.width, this.canvas.height);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set onChange callback that receives (value, index) as arguments.\r\n\t\t *\r\n\t\t * @method setOnChange\r\n\t\t * @param {Function} onChange OnChange callback receives value and index as arguments.\r\n\t\t */\r\n\t\tsetOnChange : function(onChange)\t{\r\n\t\t\tthis.onChange = onChange;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set an array of color values to be displayed on this gradient.\r\n\t\t *\r\n\t\t * @method setValue\r\n\t\t * @param {Array} values\r\n\t\t */\r\n\t\tsetValue : function(values)\t{\r\n\t\t\tthis.values = [];\r\n\r\n\t\t\tfor(var i = 0; i < values.length; i++)\r\n\t\t\t{\r\n\t\t\t\tvar color = new Color();\r\n\t\t\t\tcolor.copy(values[i]);\r\n\t\t\t\tthis.values.push(color);\r\n\t\t\t}\r\n\r\n\t\t\tthis.updateButtons();\r\n\t\t\tthis.updateValues();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Get the values stored in this element.\r\n\t\t *\r\n\t\t * @method getValue\r\n\t\t * @return {Array} Values of the gradient.\r\n\t\t */\r\n\t\tgetValue : function()\t{\r\n\t\t\treturn this.values;\r\n\t\t},\r\n\r\n\t\tupdateSize : function()\t{\r\n\t\t\tWidget.prototype.updateSize.call(this);\r\n\t\t\t\r\n\t\t\tthis.canvas.width = this.size.x;\r\n\t\t\tthis.canvas.height = this.size.y;\r\n\r\n\t\t\tthis.updateValues();\r\n\t\t}\r\n\r\n\t});\r\n\r\n\r\n\treturn styles.ColorGradientChooser = ColorGradientChooser;\r\n});\r\n\ndefine('skylark-widgets-styles/main',[\r\n\t\"./styles\",\r\n\t\"./color-chooser\",\r\n\t\"./color-gradient-chooser\"\r\n],function(styles){\r\n\treturn styles;\r\n});\ndefine('skylark-widgets-styles', ['skylark-widgets-styles/main'], function (main) { return main; });\n\n"]}