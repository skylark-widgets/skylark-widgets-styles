{"version":3,"sources":["skylark-widgets-styles.js"],"names":["define","skylark","attach","colorer","Widget","styles","ColorChooser","inherit","klassName","_construct","parent","prototype","call","this","_elm","type","style","outline","borderStyle","boxSizing","textIndent","borderRadius","boxShadow","MozAppearance","webkitAppearance","appearance","color","onChange","setOnChange","onchange","setValue","r","g","b","set","setValueHex","hex","Math","floor","setValueString","getValueString","toHEXString","getValue","rgb","getValueHex","Color","ColorGradientChooser","values","buttons","overflow","backgroundColor","Editor","theme","panelColor","zIndex","canvas","document","createElement","position","top","left","width","height","appendChild","updateButtons","self","buttonOnChange","index","setRGB","updateValues","length","removeChild","shift","button","display","cursor","push","i","context","getContext","gradient","createLinearGradient","colorStep","colorPercentage","buttonSpacing","size","x","buttonPosition","addColorStop","getStyle","fillStyle","fillRect","copy","updateSize","y","main"],"mappings":"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","file":"../skylark-widgets-styles.js","sourcesContent":["define('skylark-widgets-styles/styles',[\r\n\t\"skylark-langx/skylark\"\r\n],function(skylark){\r\n\treturn skylark.attach(\"widgets.styles\",{});\r\n});\ndefine('skylark-widgets-styles/ColorChooser',[\r\n\t\"skylark-domx-colors/colorer\",\r\n\t\"skylark-widgets-base/Widget\",\r\n\t\"./styles\"\r\n],function(\r\n\tcolorer,\r\n\tWidget,\r\n\tstyles\r\n){\r\n\t\"use strict\";\r\n\r\n\tvar ColorChooser = Widget.inherit({\r\n\t\t\"klassName\" : \"ColorChooser\",\r\n\r\n\t\t\"_construct\" : function (parent) \t{\r\n\t\t\tWidget.prototype._construct.call(this, parent, \"input\");\r\n\r\n\t\t\tthis._elm.type = \"text\";\r\n\t\t\tthis._elm.style.outline = \"none\";\r\n\t\t\tthis._elm.style.borderStyle = \"none\";\r\n\t\t\tthis._elm.style.boxSizing = \"border-box\";\r\n\t\t\tthis._elm.style.textIndent = \"4px\";\r\n\t\t\tthis._elm.style.borderRadius = \"4px\";\r\n\t\t\tthis._elm.style.boxShadow = \"none\";\r\n\t\t\tthis._elm.style.MozAppearance = \"textfield\";\r\n\t\t\tthis._elm.style.webkitAppearance = \"caret\";\r\n\t\t\tthis._elm.style.appearance = \"textfield\";\r\n\r\n\t\t\t/**\r\n\t\t\t * Color chooser.\r\n\t\t\t *\r\n\t\t\t * @attribute color\r\n\t\t\t * @type {jscolor}\r\n\t\t\t */\r\n\t\t\t this.color = colorer(this._elm);\r\n\t\t\t/*\r\n\t\t\tthis.color = new jscolor(this.element);\r\n\t\t\tthis.color.backgroundColor = Editor.theme.boxColor;\r\n\t\t\tthis.color.insetColor = Editor.theme.boxColor;\r\n\t\t\tthis.color.shadow = false;\r\n\t\t\tthis.color.borderWidth = 0;\r\n\t\t\tthis.color.borderRadius = 0;\r\n\t\t\tthis.color.zIndex = 2000;\r\n\t\t\t*/\r\n\r\n\t\t\t/**\r\n\t\t\t * On change function.\r\n\t\t\t *\r\n\t\t\t * @attribute onChange\r\n\t\t\t * @type {Function}\r\n\t\t\t */\r\n\t\t\tthis.onChange = null;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set onchange callback, called after changes.\r\n\t\t *\r\n\t\t * @method setOnChange\r\n\t\t * @param {Function} onChange\r\n\t\t */\r\n\t\tsetOnChange : function(onChange) {\r\n\t\t\tthis._elm.onchange = onChange;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set value stored in the input element.\r\n\t\t *\r\n\t\t * @method setValue\r\n\t\t * @param {Number} r\r\n\t\t * @param {Number} g\r\n\t\t * @param {Number} b\r\n\t\t */\r\n\t\tsetValue : function(r, g, b) {\r\n\t\t\t//this.color.fromRGB(r * 255, g * 255, b * 255);\r\n\t\t\tthis.color.set({\r\n\t\t\t\tr:r * 255,\r\n\t\t\t\tg:g * 255,\r\n\t\t\t\tb:b * 255\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set value from numeric hex.\r\n\t\t *\r\n\t\t * @method setValueHex\r\n\t\t * @param {Number} hex\r\n\t\t */\r\n\t\tsetValueHex : function(hex) {\r\n\t\t\thex = Math.floor(hex);\r\n\t\t\t//this.color.fromRGB(hex >> 16 & 255, hex >> 8 & 255, hex & 255);\r\n\t\t\tthis.color.set({\r\n\t\t\t\tr:hex >> 16 & 255,\r\n\t\t\t\tg:hex >> 8 & 255,\r\n\t\t\t\tb:hex & 255\r\n\t\t\t})\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set value from CSS string.\r\n\t\t *\r\n\t\t * @method setValueString\r\n\t\t * @param {Number} color\r\n\t\t */\r\n\t\tsetValueString : function(color) {\r\n\t\t\t//this.color.fromString(color);\r\n\t\t\tthis.color.set(color);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Get color value HEX as string.\r\n\t\t *\r\n\t\t * @method getValueString\r\n\t\t * @return {String} String hex color.\r\n\t\t */\r\n\t\tgetValueString : function(color) {\r\n\t\t\treturn this.color.toHEXString();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Get color value object.\r\n\t\t *\r\n\t\t * @method getValue\r\n\t\t * @return {Object} Color object.\r\n\t\t */\r\n\t\tgetValue : function() {\r\n\t\t\treturn {r: this.color.rgb[0] / 255, g: this.color.rgb[1] / 255, b: this.color.rgb[2] / 255};\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Get color value HEX.\r\n\t\t *\r\n\t\t * @method getValueHex\r\n\t\t * @return {Number} Numeric hex color.\r\n\t\t */\r\n\t\tgetValueHex : function() {\r\n\t\t\treturn (this.color.rgb[0] << 16 ^ this.color.rgb[1] << 8 ^ this.color.rgb[2] << 0);\r\n\t\t}\r\n\r\n\t}); \r\n\r\n\r\n\treturn styles.ColorChooser = ColorChooser;\r\n});\ndefine('skylark-widgets-styles/ColorGradientChooser',[\r\n\t\"skylark-graphics-color\",\r\n\t\"skylark-domx-colors/colorer\",\t\r\n\t\"skylark-widgets-base/Widget\",\r\n\t\"./styles\"\r\n],function(\r\n\tColor,\r\n\tcolorer,\r\n\tWidget,\r\n\tstyles\r\n){\r\n\t\"use strict\";\r\n\r\n\t/**\r\n\t * Color gradient chooser is used to select and preview a gradient of colors store in an array.\r\n\t *\r\n\t * @class ColorGradientChooser\r\n\t * @extends {Widget}\r\n\t * @param {Widget} parent Parent element.\r\n\t */\r\n\tvar ColorGradientChooser = Widget.inherit({\r\n\t\t\"klassName\" : \"ColorGradientChooser\",\r\n\r\n\t\t\"_construct\" : function (parent){\r\n\t\t\tWidget.prototype._construct.call(this, parent, \"div\");\r\n\r\n\t\t\t/**\r\n\t\t\t * On change callback function.\r\n\t\t\t *\r\n\t\t\t * @property onChange\r\n\t\t\t * @type {Function}\r\n\t\t\t */\r\n\t\t\tthis.onChange = null;\r\n\r\n\t\t\t/**\r\n\t\t\t * Color values of the gradient.\r\n\t\t\t *\r\n\t\t\t * @property values\r\n\t\t\t * @type {Array}\r\n\t\t\t */\r\n\t\t\tthis.values = [];\r\n\r\n\t\t\t/**\r\n\t\t\t * Buttons DOM element. Buttons have a onchange, color and index properties attached to them.\r\n\t\t\t *\r\n\t\t\t * @property buttons\r\n\t\t\t * @type {Array}\r\n\t\t\t */\r\n\t\t\tthis.buttons = [];\r\n\r\n\t\t\tthis._elm.style.overflow = \"hidden\";\r\n\t\t\tthis._elm.style.backgroundColor = Editor.theme.panelColor;\r\n\t\t\tthis._elm.style.borderStyle = \"none\";\r\n\t\t\tthis._elm.style.boxSizing = \"border-box\";\r\n\t\t\tthis._elm.style.borderRadius = \"4px\";\r\n\t\t\tthis._elm.style.zIndex = \"2000\";\r\n\r\n\t\t\t/**\r\n\t\t\t * Canvas DOM element used to draw the gradient.\r\n\t\t\t *\r\n\t\t\t * @property canvas\r\n\t\t\t * @type {DOM}\r\n\t\t\t */\r\n\t\t\tthis.canvas = document.createElement(\"canvas\");\r\n\t\t\tthis.canvas.style.position = \"absolute\";\r\n\t\t\tthis.canvas.style.top = \"0px\";\r\n\t\t\tthis.canvas.style.left = \"0px\";\r\n\t\t\tthis.canvas.style.width = \"100%\";\r\n\t\t\tthis.canvas.style.height = \"100%\";\r\n\t\t\tthis._elm.appendChild(this.canvas);\r\n\t\t},\r\n\r\n\r\n\t\t/**\r\n\t\t * Update the buttos to match new values.\r\n\t\t *\r\n\t\t * @method updateButtons\r\n\t\t */\r\n\t\tupdateButtons : function()\t{\r\n\t\t\tvar self = this;\r\n\r\n\t\t\tfunction buttonOnChange()\r\n\t\t\t{\r\n\t\t\t\tvar rgb = this.color.rgb;\r\n\r\n\t\t\t\tself.values[this.index].setRGB(rgb[0] / 255, rgb[1] / 255, rgb[2] / 255);\r\n\t\t\t\tself.updateValues();\r\n\r\n\t\t\t\tif(self.onChange !== null)\r\n\t\t\t\t{\r\n\t\t\t\t\tself.onChange(self.values[this.index], this.index);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\twhile(this.buttons.length > this.values.length)\r\n\t\t\t{\r\n\t\t\t\tthis._elm.removeChild(this.buttons.shift());\r\n\t\t\t}\r\n\r\n\t\t\twhile(this.buttons.length < this.values.length)\r\n\t\t\t{\r\n\t\t\t\tvar button = document.createElement(\"input\");\r\n\t\t\t\tbutton.type = \"text\";\r\n\t\t\t\tbutton.style.display = \"block\";\r\n\t\t\t\tbutton.style.position = \"absolute\";\r\n\t\t\t\tbutton.style.top = \"0px\";\r\n\t\t\t\tbutton.style.width = \"15px\";\r\n\t\t\t\tbutton.style.height = \"100%\";\r\n\t\t\t\tbutton.style.cursor = \"pointer\";\r\n\t\t\t\tbutton.style.outline = \"none\";\r\n\t\t\t\tbutton.style.borderStyle = \"none\";\r\n\t\t\t\tbutton.style.boxSizing = \"border-box\";\r\n\t\t\t\tbutton.style.borderRadius = \"2px\";\r\n\t\t\t\tthis._elm.appendChild(button);\r\n\r\n\t\t\t\tvar color = colorer(button);\r\n\t\t\t\t/*\r\n\t\t\t\tvar color = new jscolor(button);\r\n\t\t\t\tcolor.backgroundColor = Editor.theme.boxColor;\r\n\t\t\t\tcolor.insetColor = Editor.theme.boxColor;\r\n\t\t\t\tcolor.shadow = false;\r\n\t\t\t\tcolor.borderWidth = 0;\r\n\t\t\t\tcolor.borderRadius = 0;\r\n\t\t\t\tcolor.zIndex = 2000;\r\n\t\t\t\t*/\r\n\r\n\t\t\t\tbutton.onchange = buttonOnChange;\r\n\t\t\t\tbutton.color = color;\r\n\t\t\t\tbutton.index = -1;\r\n\r\n\t\t\t\tthis.buttons.push(button);\r\n\t\t\t}\r\n\r\n\t\t\tfor(var i = 0; i < this.buttons.length; i++)\r\n\t\t\t{\r\n\t\t\t\tthis.buttons[i].index = i;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Update the representation of the gradient.\r\n\t\t *\r\n\t\t * @method updateValues\r\n\t\t */\r\n\t\tupdateValues : function(){\r\n\t\t\tvar context = this.canvas.getContext(\"2d\");\r\n\t\t\tvar gradient = context.createLinearGradient(0, 0, this.canvas.width, 0);\r\n\r\n\t\t\tvar colorStep = 1 / (this.values.length - 1);\r\n\t\t\tvar colorPercentage = 0;\r\n\r\n\t\t\tvar buttonSpacing = (this.size.x - 15) / (this.buttons.length - 1);\r\n\t\t\tvar buttonPosition = 0;\r\n\r\n\t\t\tfor(var i = 0; i < this.values.length; i++)\r\n\t\t\t{\r\n\t\t\t\tgradient.addColorStop(colorPercentage, this.values[i].getStyle());\r\n\r\n\t\t\t\t//this.buttons[i].color.fromRGB(this.values[i].r * 255, this.values[i].g * 255, this.values[i].b * 255);\r\n\t\t\t\tthis.buttons[i].color.set({\r\n\t\t\t\t\tr : this.values[i].r * 255, \r\n\t\t\t\t\tg : this.values[i].g * 255, \r\n\t\t\t\t\tb : this.values[i].b * 255\r\n\t\t\t\t});\r\n\t\t\t\tthis.buttons[i].style.left = buttonPosition + \"px\";\r\n\r\n\t\t\t\tcolorPercentage += colorStep;\r\n\t\t\t\tbuttonPosition += buttonSpacing;\r\n\t\t\t}\r\n\r\n\t\t\tcontext.fillStyle = gradient;\r\n\t\t\tcontext.fillRect(0, 0, this.canvas.width, this.canvas.height);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set onChange callback that receives (value, index) as arguments.\r\n\t\t *\r\n\t\t * @method setOnChange\r\n\t\t * @param {Function} onChange OnChange callback receives value and index as arguments.\r\n\t\t */\r\n\t\tsetOnChange : function(onChange)\t{\r\n\t\t\tthis.onChange = onChange;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set an array of color values to be displayed on this gradient.\r\n\t\t *\r\n\t\t * @method setValue\r\n\t\t * @param {Array} values\r\n\t\t */\r\n\t\tsetValue : function(values)\t{\r\n\t\t\tthis.values = [];\r\n\r\n\t\t\tfor(var i = 0; i < values.length; i++)\r\n\t\t\t{\r\n\t\t\t\tvar color = new Color();\r\n\t\t\t\tcolor.copy(values[i]);\r\n\t\t\t\tthis.values.push(color);\r\n\t\t\t}\r\n\r\n\t\t\tthis.updateButtons();\r\n\t\t\tthis.updateValues();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Get the values stored in this element.\r\n\t\t *\r\n\t\t * @method getValue\r\n\t\t * @return {Array} Values of the gradient.\r\n\t\t */\r\n\t\tgetValue : function()\t{\r\n\t\t\treturn this.values;\r\n\t\t},\r\n\r\n\t\tupdateSize : function()\t{\r\n\t\t\tWidget.prototype.updateSize.call(this);\r\n\t\t\t\r\n\t\t\tthis.canvas.width = this.size.x;\r\n\t\t\tthis.canvas.height = this.size.y;\r\n\r\n\t\t\tthis.updateValues();\r\n\t\t}\r\n\r\n\t});\r\n\r\n\r\n\treturn styles.ColorGradientChooser = ColorGradientChooser;\r\n});\r\n\ndefine('skylark-widgets-styles/main',[\r\n\t\"./styles\",\r\n\t\"./ColorChooser\",\r\n\t\"./ColorGradientChooser\"\r\n],function(styles){\r\n\treturn styles;\r\n});\ndefine('skylark-widgets-styles', ['skylark-widgets-styles/main'], function (main) { return main; });\n\n"]}